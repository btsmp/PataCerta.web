{"version":3,"file":"components-common-Modal-Modal-stories.6251858339ce66b226f3.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;;;;;AAGA;AAAA;AAAA;AAAA;;;;;;;AAGA;AAjBA;AAAA;AAmBA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AACA;AASA;;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;AAEA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;AAIA;AAzCA;AAAA","sources":["webpack://pet-adoption-plataform.web/./src/components/common/Modal/Modal.stories.tsx","webpack://pet-adoption-plataform.web/./src/components/common/Modal/Modal.tsx"],"sourcesContent":["// src/components/Modal.stories.tsx\n\nimport { Meta, Story } from \"@storybook/react\";\nimport Modal, { ModalProps } from \"./Modal\";\nimport React, { useState } from \"react\";\n\n// Configurações do Storybook para o componente Modal\nconst meta: Meta<typeof Modal> = {\n  title: \"Components/Modal\",\n  component: Modal,\n  args: {\n    title: \"Example Modal\",\n    children: <p>Este é um exemplo de conteúdo do modal.</p>,\n  },\n  argTypes: {\n    onClose: { action: \"closed\" }, // Action handler para o evento onClose\n    isOpen: { control: \"boolean\" }, // Controlador para o estado de isOpen\n  },\n};\n\nexport default meta;\n\n// Definição do Template\nconst Template: Story<ModalProps> = (args) => {\n  const [isOpen, setIsOpen] = useState(args.isOpen);\n\n  const handleOpen = () => setIsOpen(true);\n  const handleClose = () => {\n    setIsOpen(false);\n    args.onClose();\n  };\n\n  return (\n    <>\n      <button className=\"btn\" onClick={handleOpen}>\n        Open Modal\n      </button>\n      <Modal {...args} isOpen={isOpen} onClose={handleClose} />\n    </>\n  );\n};\n\n// Story Padrão\nexport const Default = Template.bind({});\nDefault.args = {\n  isOpen: false,\n};\n\n","import React, { useRef, useEffect } from \"react\";\nimport { FaTimes } from \"react-icons/fa\"; // Ícone de fechamento\n\ntype ModalProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  children: React.ReactNode;\n  title?: string;\n};\n\nexport function Modal({ isOpen, onClose, children, title }: ModalProps)  {\n  const dialogRef = useRef<HTMLDialogElement>(null);\n\n  useEffect(() => {\n    const dialog = dialogRef.current;\n\n    if (dialog) {\n      if (isOpen) {\n        dialog.showModal();\n      } else {\n        dialog.close();\n      }\n    }\n  }, [isOpen]);\n\n  // Fecha o modal ao clicar fora da caixa\n  const handleBackdropClick = (e: React.MouseEvent<HTMLDialogElement>) => {\n    if (e.target === dialogRef.current) {\n      onClose();\n    }\n  };\n\n  return (\n    <dialog\n      ref={dialogRef}\n      className=\"modal fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50\"\n      onClick={handleBackdropClick}\n    >\n      <div className=\"modal-box relative p-6 bg-white rounded-lg shadow-lg max-w-md w-full\">\n        <button\n          onClick={onClose}\n          className=\"absolute top-4 right-4 text-gray-600 hover:text-gray-900\"\n          aria-label=\"Fechar Modal\"\n        >\n          <FaTimes />\n        </button>\n        {title && <h3 className=\"font-bold text-lg mb-4\">{title}</h3>}\n        <div className=\"py-4\">{children}</div>\n      </div>\n    </dialog>\n  );\n};\n"],"names":[],"sourceRoot":""}