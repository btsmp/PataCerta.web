{"version":3,"file":"components-common-Modal-Modal-stories.4ec4a88a0dd70486f882.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;;;;;AAGA;AAAA;AAAA;AAAA;;;;;;;AAGA;AAjBA;AAAA;AAmBA;AACA;AACA;AACA;AACA","sources":["webpack://pet-adoption-plataform.web/./src/components/common/Modal/Modal.stories.tsx"],"sourcesContent":["// src/components/Modal.stories.tsx\n\nimport { Meta, Story } from \"@storybook/react\";\nimport { Modal } from \"./Modal\";\nimport React, { useState } from \"react\";\n\n// Configurações do Storybook para o componente Modal\nconst meta: Meta<typeof Modal> = {\n  title: \"Components/Modal\",\n  component: Modal,\n  args: {\n    title: \"Example Modal\",\n    children: <p>Este é um exemplo de conteúdo do modal.</p>,\n  },\n  argTypes: {\n    onClose: { action: \"closed\" }, // Action handler para o evento onClose\n    isOpen: { control: \"boolean\" }, // Controlador para o estado de isOpen\n  },\n};\n\nexport default meta;\n\n// Definição do Template\nconst Template: Story<ModalProps> = (args) => {\n  const [isOpen, setIsOpen] = useState(args.isOpen);\n\n  const handleOpen = () => setIsOpen(true);\n  const handleClose = () => {\n    setIsOpen(false);\n    args.onClose();\n  };\n\n  return (\n    <>\n      <button className=\"btn\" onClick={handleOpen}>\n        Open Modal\n      </button>\n      <Modal {...args} isOpen={isOpen} onClose={handleClose} />\n    </>\n  );\n};\n\n// Story Padrão\nexport const Default = Template.bind({});\nDefault.args = {\n  isOpen: false,\n};\n\n"],"names":[],"sourceRoot":""}