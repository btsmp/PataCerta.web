{"version":3,"file":"components-common-Modal-Modal-stories.fd7140c4431fe5f74753.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;;;;;AACA;AACA;AAAA;;;;;AACA;AAAA;;;;;AACA;AAAA;;;;;;;;;;;;;;;;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9EA;AACA;AASA;;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;AAEA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;AAIA;AAzCA;AAAA","sources":["webpack://pet-adoption-plataform.web/./src/components/common/Modal/Modal.stories.tsx","webpack://pet-adoption-plataform.web/./src/components/common/Modal/Modal.tsx"],"sourcesContent":["// src/components/Modal.stories.tsx\n\nimport { Meta, StoryObj } from '@storybook/react';\nimport {Modal, ModalProps } from './Modal';\n\nconst meta: Meta<typeof Modal> = {\n  title: 'Components/Modal',\n  component: Modal,\n  args: {\n    title: 'Example Modal',\n    children: <p>This is a sample modal content.</p>,\n    isOpen: false,\n    onClose: () => alert('Modal closed'),\n  },\n  argTypes: {\n    isOpen: {\n      control: 'boolean',\n      description: 'Determines if the modal is open',\n    },\n    onClose: {\n      action: 'closed',\n      description: 'Function called when the modal is closed',\n    },\n    title: {\n      control: 'text',\n      description: 'The title of the modal',\n    },\n    children: {\n      control: 'text',\n      description: 'The content inside the modal',\n    },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<ModalProps>;\n\n// Default story\nexport const Default: Story = {\n  args: {\n    isOpen: true,\n  },\n};\n\n// Custom Modal Title\nexport const CustomTitle: Story = {\n  args: {\n    title: 'Custom Modal Title',\n    children: <p>Custom content inside the modal.</p>,\n    isOpen: true,\n  },\n};\n\n// Modal Opened\nexport const OpenModal: Story = {\n  args: {\n    title: 'Open Modal',\n    isOpen: true,\n  },\n};\n\n// Modal with Custom Content\nexport const CustomContent: Story = {\n  args: {\n    title: 'Modal with List',\n    children: (\n      <div>\n        <p>This modal contains a list:</p>\n        <ul>\n          <li>Item 1</li>\n          <li>Item 2</li>\n          <li>Item 3</li>\n        </ul>\n      </div>\n    ),\n    isOpen: true,\n  },\n};\n","import React, { useRef, useEffect } from \"react\";\nimport { FaTimes } from \"react-icons/fa\"; // Ícone de fechamento\n\nexport type ModalProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  children: React.ReactNode;\n  title?: string;\n};\n\nexport function Modal({ isOpen, onClose, children, title }: ModalProps)  {\n  const dialogRef = useRef<HTMLDialogElement>(null);\n\n  useEffect(() => {\n    const dialog = dialogRef.current;\n\n    if (dialog) {\n      if (isOpen) {\n        dialog.showModal();\n      } else {\n        dialog.close();\n      }\n    }\n  }, [isOpen]);\n\n  // Fecha o modal ao clicar fora da caixa\n  const handleBackdropClick = (e: React.MouseEvent<HTMLDialogElement>) => {\n    if (e.target === dialogRef.current) {\n      onClose();\n    }\n  };\n\n  return (\n    <dialog\n      ref={dialogRef}\n      className=\"modal fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50\"\n      onClick={handleBackdropClick}\n    >\n      <div className=\"modal-box relative p-6 bg-white rounded-lg shadow-lg max-w-md w-full\">\n        <button\n          onClick={onClose}\n          className=\"absolute top-4 right-4 text-gray-600 hover:text-gray-900\"\n          aria-label=\"Fechar Modal\"\n        >\n          <FaTimes />\n        </button>\n        {title && <h3 className=\"font-bold text-lg mb-4\">{title}</h3>}\n        <div className=\"py-4\">{children}</div>\n      </div>\n    </dialog>\n  );\n};\n"],"names":[],"sourceRoot":""}